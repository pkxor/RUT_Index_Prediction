<?xml version="1.0" encoding="UTF-8"?><process version="7.2.002">
  <context>
    <input/>
    <output/>
    <macros/>
  </context>
  <operator activated="true" class="process" compatibility="7.2.002" expanded="true" name="Process">
    <parameter key="logverbosity" value="init"/>
    <parameter key="random_seed" value="2001"/>
    <parameter key="send_mail" value="never"/>
    <parameter key="notification_email" value=""/>
    <parameter key="process_duration_for_mail" value="30"/>
    <parameter key="encoding" value="SYSTEM"/>
    <process expanded="true">
      <operator activated="true" class="quantx1:yahoo_historical_data_extractor" compatibility="1.0.006" expanded="true" height="82" name="Yahoo Historical Stock Data (3)" width="90" x="45" y="34">
        <parameter key="I agree to abide by Yahoo's Terms &amp; Conditions on financial data usage" value="true"/>
        <parameter key="Quick Stock Ticker Data" value="true"/>
        <parameter key="Stock Ticker" value="^rut"/>
        <parameter key="select_fields" value="VOLUME|OPEN|DAY_LOW|DAY_HIGH|CLOSE|ADJUSTED_CLOSE"/>
        <parameter key="date_format" value="yyyy-MM-dd"/>
        <parameter key="date_start" value="2014-01-01"/>
        <parameter key="date_end" value="2016-04-27"/>
        <parameter key="data_frequency" value="DAILY"/>
        <parameter key="Cache Data in Memory" value="true"/>
      </operator>
      <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="Pre-Process 1" width="90" x="313" y="34">
        <process expanded="true">
          <operator activated="true" class="rename" compatibility="7.2.002" expanded="true" height="82" name="Rename (3)" width="90" x="246" y="442">
            <parameter key="old_name" value="^rut_CLOSE"/>
            <parameter key="new_name" value="close"/>
            <list key="rename_additional_attributes">
              <parameter key="^rut_DAY_HIGH" value="high"/>
              <parameter key="^rut_DAY_LOW" value="low"/>
              <parameter key="^rut_VOLUME" value="volume"/>
              <parameter key="^rut_ADJUSTED_CLOSE" value="X.RUT_ADJUSTED_CLOSE"/>
            </list>
          </operator>
          <operator activated="false" class="set_role" compatibility="7.2.002" expanded="true" height="82" name="Set Role" width="90" x="380" y="544">
            <parameter key="attribute_name" value="Date"/>
            <parameter key="target_role" value="id"/>
            <list key="set_additional_roles"/>
          </operator>
          <connect from_port="in 1" to_op="Rename (3)" to_port="example set input"/>
          <connect from_op="Rename (3)" from_port="example set output" to_port="out 1"/>
          <portSpacing port="source_in 1" spacing="0"/>
          <portSpacing port="source_in 2" spacing="0"/>
          <portSpacing port="sink_out 1" spacing="0"/>
          <portSpacing port="sink_out 2" spacing="0"/>
        </process>
      </operator>
      <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="CADET_TOOLBOX" width="90" x="447" y="34">
        <process expanded="true">
          <operator activated="false" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_Shift" width="90" x="983" y="85">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="Read data lead or lag" width="90" x="45" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="Shift Function" width="90" x="246" y="34">
                <parameter key="script" value="rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    &#10;    # Add the TTR package to the Rapidminer R extension&#10;    library(TTR)&#10;&#10;    # Function to define the leads/lags&#10;   CADET_Shift &lt;- function(x,shift_by)&#10;   {&#10;  &#10;   if(length(shift_by)&gt;1)&#10;    return(sapply(shift_by,CADET_shift,x=x))&#10;  &#10;   out &lt;- NULL&#10;   abs_shift_by=abs(shift_by)&#10;  &#10;   if(shift_by&gt;0)&#10;   out &lt;- c(tail(x,-abs_shift_by),rep(NA,abs_shift_by))&#10;  &#10;   else if(shift_by&lt;0)&#10;   out &lt;- c(rep(NA,abs_shift_by),head(x,-abs_shift_by))&#10;  &#10;   else&#10;   out &lt;- x&#10;  &#10;   out&#10;   }&#10;&#10;  #USE the function for lead/lag. Assign X, positive value for lead, negative value for lag&#10;&#10;&#10;    #Assign output to data for lag&#10;  usevar1 &lt;- CADET_Shift(data[,&quot;close&quot;],-1)&#10;  data$Shift_lag_1_x &lt;- usevar1&#10;&#10;    #Assign output to data for lag&#10;  usevar2 &lt;- CADET_Shift(data[,&quot;close&quot;],-2)&#10;  data$Shift_lag_2_x &lt;- usevar2&#10;&#10;  #Assign output to data for lag&#10;  usevar3 &lt;- CADET_Shift(data[,&quot;close&quot;],-3)&#10;  data$Shift_lag_3_x &lt;- usevar3&#10;&#10;   #Assign output to data for lag&#10;  usevar4 &lt;- CADET_Shift(data[,&quot;close&quot;],-4)&#10;  data$Shift_lag_4_x &lt;- usevar4&#10;&#10;     #Assign output to data for lag&#10;  usevar5 &lt;- CADET_Shift(data[,&quot;close&quot;],-5)&#10;  data$Shift_lag_5_x &lt;- usevar5&#10;&#10;  &#10;     #Assign output to data for lag&#10;  usevar8 &lt;- CADET_Shift(data[,&quot;close&quot;],-8)&#10;  data$Shift_lag_8_x &lt;- usevar8&#10;&#10;  #Assign output to data for lag&#10;  usevar13 &lt;- CADET_Shift(data[,&quot;close&quot;],-13)&#10;  data$Shift_lag_13_x &lt;- usevar13&#10;&#10;    #Assign output to data for lag&#10;  usevar21 &lt;- CADET_Shift(data[,&quot;close&quot;],-21)&#10;  data$Shift_lag_21_x &lt;- usevar21&#10;&#10;&#10;    #Assign output to data for lag&#10;  usevar34 &lt;- CADET_Shift(data[,&quot;close&quot;],-34)&#10;  data$Shift_lag_34_x &lt;- usevar34&#10;&#10;   # return updated data&#10;    return(data)&#10;}"/>
              </operator>
              <connect from_port="in 1" to_op="Read data lead or lag" to_port="input 1"/>
              <connect from_op="Read data lead or lag" from_port="output 1" to_op="Shift Function" to_port="input 1"/>
              <connect from_op="Shift Function" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="false" class="multiply" compatibility="7.2.002" expanded="true" height="68" name="Multiply" width="90" x="45" y="289"/>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_CADET_MACD" width="90" x="246" y="85">
            <process expanded="true">
              <operator activated="false" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="68" name="read data CMACD" width="90" x="179" y="391">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="read data TTR_MACD (2)" width="90" x="179" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="CADET_MACD" width="90" x="514" y="34">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    &#10;    library(TTR)&#10;    &#10;    CADET_MACD &lt;- function(nslow,nfast,nsignal)&#10;    {&#10;&#10;    ema1 = EMA(data[,&quot;close&quot;],nslow)&#10;    ema2 = EMA(data[,&quot;close&quot;],nfast)&#10;    cmacd = ema1 - ema2&#10;    data$C_StandardMACD &lt;- cmacd&#10;    &#10;    sig1 = EMA(data[,&quot;C_StandardMACD&quot;],nsignal)&#10;    data$C_SignalMACD &lt;- sig1&#10;&#10;    macdosc = cmacd - sig1&#10;    data$C_OscillatorMACD &lt;- macdosc&#10;&#10;    ppo &lt;- 100*(ema1 - ema2)/ema2&#10;    data$C_PercentPriceOscillator &lt;- ppo&#10;&#10;    pposig &lt;- EMA(data[,&quot;C_PercentPriceOscillator&quot;],nsignal)&#10;    data$C_SignalPriceOscillator &lt;- pposig&#10;&#10;    ppohist = ppo - pposig&#10;    data$C_HistogramPriceOscillator &lt;- ppohist&#10;&#10;    vema1 = EMA(data[,&quot;volume&quot;],nslow)&#10;    vema2 = EMA(data[,&quot;volume&quot;],nfast)&#10;    pvo = 100*(vema2 - vema1)/vema2&#10;    data$C_VolumeOscillatorPercent &lt;- pvo&#10;&#10;    vsig = EMA(data[,&quot;C_VolumeOscillatorPercent&quot;],nsignal)&#10;    data$C_SignalVolumeOscillator &lt;- vsig&#10;&#10;    vohist = pvo - vsig&#10;    data$C_HistogramVolumeOscillator &lt;- vohist&#10;&#10;    data&#10;  &#10;    }&#10;&#10;# Add values of nslow, nfast and nsignal respectively below&#10;    retval1 &lt;- CADET_MACD(12,26,9)&#10;        &#10;    return(retval1)&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="read data TTR_MACD (2)" to_port="input 1"/>
              <connect from_op="read data TTR_MACD (2)" from_port="output 1" to_op="CADET_MACD" to_port="input 1"/>
              <connect from_op="CADET_MACD" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
              <description align="center" color="yellow" colored="false" height="231" resized="true" width="472" x="19" y="140">CADET Other Technical Indicators&lt;br/&gt;&lt;br&gt;1. Standard MACD from Original formula&lt;br&gt;2. Standard MACD Signal&lt;br&gt;3. MACD Oscillator&lt;br&gt;4. Percentage Price Oscillator&lt;br&gt;5. Signal price Oscillator&lt;br&gt;6. Histogram of Price Oscillator&lt;br&gt;7. Percentage Volume Oscillator&lt;br&gt;8. Signal volume Oscillator&lt;br&gt;9. Histogram Volume Oscillator&lt;br&gt;</description>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_TTR_MACD" width="90" x="380" y="85">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="read data TTR_MACD" width="90" x="45" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="TTR_MACD" width="90" x="179" y="34">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    &#10;    library(TTR)&#10;    &#10;    macd1 &lt;- MACD(data[,&quot;close&quot;],12,26,9, maType = &quot;EMA&quot;)&#10;    data$MACD_12_26_9_x &lt;- macd1[,&quot;macd&quot;]&#10;    data$Signal_12_26_9_x &lt;- macd1[,&quot;signal&quot;]&#10;        &#10;    return(data)&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="read data TTR_MACD" to_port="input 1"/>
              <connect from_op="read data TTR_MACD" from_port="output 1" to_op="TTR_MACD" to_port="input 1"/>
              <connect from_op="TTR_MACD" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_TTR_CMF" width="90" x="246" y="187">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="read data TTR_CMF" width="90" x="112" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="TTR_CMF" width="90" x="246" y="34">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    &#10;    library(TTR)&#10;    &#10;    cmf20 &lt;- CMF(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)], data[,&quot;volume&quot;],n=20)&#10;    data$CMF_20_x &lt;- cmf20&#10;        &#10;    return(data)&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="read data TTR_CMF" to_port="input 1"/>
              <connect from_op="read data TTR_CMF" from_port="output 1" to_op="TTR_CMF" to_port="input 1"/>
              <connect from_op="TTR_CMF" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_CADET_KST_Smooth" width="90" x="380" y="187">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="read data TTR_KST_MA" width="90" x="45" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="TTR_KST_MA" width="90" x="179" y="34">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    &#10;    library(TTR)&#10;&#10;   # Add or remove the MA in the below formula under maType parameter&#10;   kst9 &lt;- KST(data[,&quot;close&quot;],n = c(10,10,10,15), nROC = c(10,15,20,30), nSig = 9, maType=list(list(SMA),list(EMA),list(DEMA),list(WMA)))&#10;&#10;   data$KST_MA__9_x &lt;- kst9[,&quot;kst&quot;]    &#10;   data$KSTSignal_MA_9_x &lt;- kst9[,&quot;signal&quot;]&#10;    &#10;   return(data)&#10;&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="read data TTR_KST_MA" to_port="input 1"/>
              <connect from_op="read data TTR_KST_MA" from_port="output 1" to_op="TTR_KST_MA" to_port="input 1"/>
              <connect from_op="TTR_KST_MA" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
              <description align="center" color="yellow" colored="false" height="174" resized="false" width="180" x="71" y="153">KST&lt;br&gt;With different Moving Averages flexibility for smoothing the data more&lt;br&gt;&lt;br&gt;Add or remove the MA in the formula under maType parameter inside operator near comments</description>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_TTR_KST" width="90" x="246" y="289">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="read data TTR_KST" width="90" x="45" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="TTR_KST" width="90" x="179" y="34">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    &#10;    library(TTR)&#10;    &#10;   kst9 &lt;- KST(data[,&quot;close&quot;], n = c(10,10,10,15), nROC = c(10,15,20,30), nSig = 9)&#10;   data$KST_9_x &lt;- kst9[,&quot;kst&quot;]    &#10;   data$KSTSignal_9_x &lt;- kst9[,&quot;signal&quot;]&#10;    &#10;   return(data)&#10;&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="read data TTR_KST" to_port="input 1"/>
              <connect from_op="read data TTR_KST" from_port="output 1" to_op="TTR_KST" to_port="input 1"/>
              <connect from_op="TTR_KST" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_TTR_ChaikinAD" width="90" x="380" y="289">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="read data TTR_ChaikinAD" width="90" x="45" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="TTR_ChaikinAD" width="90" x="179" y="34">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    &#10;    library(TTR)&#10;&#10;    ckad &lt;- chaikinAD(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)], data[,&quot;volume&quot;])&#10;    data$ChaikinAD &lt;- ckad &#10;    &#10;    return(data)&#10;&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="read data TTR_ChaikinAD" to_port="input 1"/>
              <connect from_op="read data TTR_ChaikinAD" from_port="output 1" to_op="TTR_ChaikinAD" to_port="input 1"/>
              <connect from_op="TTR_ChaikinAD" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_TTR_ChaikinVolatility" width="90" x="246" y="391">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="read data TTR_ChaikinVolatility" width="90" x="45" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="TTR_ChaikinVolatility" width="90" x="246" y="34">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    &#10;    library(TTR)&#10;&#10;    vt10 &lt;- chaikinVolatility(data[,c(&quot;high&quot;,&quot;low&quot;)], n= 10)&#10;    data$ChainkinVolatility_10_x &lt;- vt10&#10;    &#10;    return(data)&#10;&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="read data TTR_ChaikinVolatility" to_port="input 1"/>
              <connect from_op="read data TTR_ChaikinVolatility" from_port="output 1" to_op="TTR_ChaikinVolatility" to_port="input 1"/>
              <connect from_op="TTR_ChaikinVolatility" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_TTR_SMI" width="90" x="380" y="391">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="read data TTR_SMI" width="90" x="45" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="TTR_SMI" width="90" x="246" y="34">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    &#10;    library(TTR)&#10;&#10;    smi1 &lt;- SMI(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)], n = 13, nFast = 2, nSlow = 25, nSig = 9, maType=list(list(SMA), list(EMA, wilder=TRUE), list(SMA)))&#10;    data$SMI_25_x &lt;- smi1[,&quot;SMI&quot;]&#10;    data$SMISignal_9_x &lt;- smi1[,&quot;signal&quot;] &#10;&#10;        &#10;    return(data)&#10;&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="read data TTR_SMI" to_port="input 1"/>
              <connect from_op="read data TTR_SMI" from_port="output 1" to_op="TTR_SMI" to_port="input 1"/>
              <connect from_op="TTR_SMI" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_RSI_TTR" width="90" x="581" y="85">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="data read RSI TTR" width="90" x="45" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="R_RSI_TTR (2)" width="90" x="179" y="34">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    library(TTR)&#10;&#10;    RSIvalue3 &lt;- RSI(data[,&quot;close&quot;], n=3)&#10;    data$RSI_3_x &lt;- RSIvalue3&#10;&#10;&#10;    RSIvalue5 &lt;- RSI(data[,&quot;close&quot;], n=5)&#10;    data$RSI_5_x &lt;- RSIvalue5&#10;&#10;&#10;    RSIvalue8 &lt;- RSI(data[,&quot;close&quot;], n=8)&#10;    data$RSI_8_x &lt;- RSIvalue8&#10;&#10;&#10;    RSIvalue13 &lt;- RSI(data[,&quot;close&quot;], n=13)&#10;    data$RSI_13_x &lt;- RSIvalue13&#10;&#10;    &#10;    RSIvalue21 &lt;- RSI(data[,&quot;close&quot;], n=21)&#10;    data$RSI_21_x &lt;- RSIvalue21&#10;&#10;&#10;    RSIvalue34 &lt;- RSI(data[,&quot;close&quot;], n=34)&#10;    data$RSI_34_x &lt;- RSIvalue34&#10;&#10;      &#10;    return(data)&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="data read RSI TTR" to_port="input 1"/>
              <connect from_op="data read RSI TTR" from_port="output 1" to_op="R_RSI_TTR (2)" to_port="input 1"/>
              <connect from_op="R_RSI_TTR (2)" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_CADET_RSI_Sentiment" width="90" x="581" y="187">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="Read data CADETRSI" width="90" x="246" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="R_RSI_CADET" width="90" x="380" y="34">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    library(TTR)&#10;    library(zoo)&#10;# Start of Function&#10;  &#10;    CADET_RSI_sentiment&lt;-function(x,n)&#10;  {&#10;    &#10;    a &lt;- x[,&quot;close&quot;]&#10;    b &lt;- c(rep(NA,1),head(x[,&quot;close&quot;],-1))&#10;    delta &lt;- c(a-b)    &#10;    &#10;    fratio &lt;- (x[,&quot;close&quot;]-x[,&quot;low&quot;])/(x[,&quot;high&quot;]-x[,&quot;low&quot;])&#10;    newformula &lt;- delta*fratio&#10;    newformula1 &lt;- delta*(1-fratio)&#10;    finalRWD &lt;- ifelse(delta&gt;=0,newformula,newformula1)&#10;   # x$a&lt;-a&#10;  #  x$b&lt;-b&#10;   # x$fratio&lt;-fratio&#10;  #  x$delta&lt;-delta&#10;    x$NFR &lt;- finalRWD&#10;    df &lt;- x$NFR&#10;    upval &lt;- ifelse(df&gt;=0,x$NFR,0)&#10;    x$up &lt;- upval&#10;    downval &lt;- ifelse(df&lt;=0,x$NFR,0)&#10;    x$down &lt;- downval&#10;    &#10;    absdown &lt;- abs(downval)&#10;    &#10;    &#10;    upp &lt;- upval[2:nrow(x)]&#10;    &#10;    downn &lt;- downval[2:nrow(x)]   &#10;    &#10;    &#10;    meanup &lt;- rollmean(upp,n)&#10;    &#10;    x$meanup &lt;- c(rep(NA,n),meanup)   &#10;    &#10;    meandown &lt;- rollmean(downn,n)&#10;    &#10;    x$meandown &lt;- c(rep(NA,n),meandown)&#10;    &#10;    up1 &lt;- x$meanup&#10;    down1 &lt;- abs(x$meandown)&#10;    totalroll &lt;- (up1/down1)&#10;    x$RSmean &lt;- totalroll   &#10;    &#10;    nf &lt;- 100-(100/(1+x$RSmean))&#10;    x$CADETRSI &lt;- nf&#10;    &#10;    CADETRSI &lt;- nf&#10;    # View(x)&#10;    &#10;  }&#10;&#10;# End of Function&#10;&#10;output3 &lt;- CADET_RSI_sentiment(data,3)&#10;data$CRSI_3_x &lt;- output3&#10;&#10;output5 &lt;- CADET_RSI_sentiment(data,5)&#10;data$CRSI_5_x &lt;- output5&#10;&#10;output8 &lt;- CADET_RSI_sentiment(data,8)&#10;data$CRSI_8_x &lt;- output8&#10;&#10;output13 &lt;- CADET_RSI_sentiment(data,13)&#10;data$CRSI_13_x &lt;- output13&#10;&#10;output21 &lt;- CADET_RSI_sentiment(data,21)&#10;data$CRSI_21_x &lt;- output21&#10;&#10;output34 &lt;- CADET_RSI_sentiment(data,34)&#10;data$CRSI_34_x &lt;- output34&#10;&#10;&#10;return(data)&#10;    &#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="Read data CADETRSI" to_port="input 1"/>
              <connect from_op="Read data CADETRSI" from_port="output 1" to_op="R_RSI_CADET" to_port="input 1"/>
              <connect from_op="R_RSI_CADET" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_HMA_TTR_CADET" width="90" x="581" y="289">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="Execute R (2)" width="90" x="45" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="Execute R (3)" width="90" x="179" y="34">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    library(TTR)&#10;&#10;    # HMA10 &lt;- HMA(data[,&quot;close&quot;],n=12)&#10;&#10;    HMA3 &lt;- WMA(2*WMA(data[,&quot;close&quot;],n=1)- WMA(data[,&quot;close&quot;],n=3), n=trunc(sqrt(3)),data[,&quot;close&quot;])&#10;    data$HMA_3_x &lt;- HMA3&#10;&#10;    HMA5 &lt;- WMA(2*WMA(data[,&quot;close&quot;],n=2)- WMA(data[,&quot;close&quot;],n=5), n=trunc(sqrt(5)),data[,&quot;close&quot;])&#10;    data$HMA_5_x &lt;- HMA5&#10;    &#10;    HMA8 &lt;- WMA(2*WMA(data[,&quot;close&quot;],n=4)- WMA(data[,&quot;close&quot;],n=8), n=trunc(sqrt(8)),data[,&quot;close&quot;])&#10;    data$HMA_8_x &lt;- HMA8&#10;&#10;    HMA13 &lt;- WMA(2*WMA(data[,&quot;close&quot;],n=6)- WMA(data[,&quot;close&quot;],n=13), n=trunc(sqrt(13)),data[,&quot;close&quot;])&#10;    data$HMA_13_x &lt;- HMA13&#10;&#10;    HMA21 &lt;- WMA(2*WMA(data[,&quot;close&quot;],n=10)- WMA(data[,&quot;close&quot;],n=21), n=trunc(sqrt(21)),data[,&quot;close&quot;])&#10;    data$HMA_21_x &lt;- HMA21&#10;    &#10;    return(data)&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="Execute R (2)" to_port="input 1"/>
              <connect from_op="Execute R (2)" from_port="output 1" to_op="Execute R (3)" to_port="input 1"/>
              <connect from_op="Execute R (3)" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
              <description align="center" color="yellow" colored="false" height="174" resized="false" width="902" x="126" y="229">HMA derieved from original formula that uses WMA&lt;br&gt;&lt;br&gt;HMA = (WMA ( 2 * WMA (data, n=n/2) - WMA(data, n=n), n = Squareroot (lastvalue), data)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;*truncate n values, decimals are not allowed for vales of n in the above formula&lt;br&gt;&lt;br&gt;&lt;br&gt;</description>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_RSI_EMA" width="90" x="581" y="391">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="data read RSI EMA" width="90" x="45" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="R_RSI_EMA (2)" width="90" x="246" y="34">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    library(TTR)&#10;&#10;    price&lt;-data[,&quot;close&quot;]&#10;    rsiema3 &lt;- RSI(price,n=3, maType = &quot;EMA&quot;,wts=data[,&quot;volume&quot;])&#10;    data$RSI_EMA_3_x &lt;- rsiema3&#10;&#10;    rsiema5 &lt;- RSI(price,n=5, maType = &quot;EMA&quot;,wts=data[,&quot;volume&quot;])&#10;    data$RSI_EMA_5_x &lt;- rsiema5&#10;&#10;    rsiema8 &lt;- RSI(price,n=8, maType = &quot;EMA&quot;,wts=data[,&quot;volume&quot;])&#10;    data$RSI_EMA_8_x &lt;- rsiema8&#10;&#10;    rsiema13 &lt;- RSI(price,n=13, maType = &quot;EMA&quot;,wts=data[,&quot;volume&quot;])&#10;    data$RSI_EMA_13_x &lt;- rsiema13&#10;&#10;    rsiema21 &lt;- RSI(price,n=21, maType = &quot;EMA&quot;,wts=data[,&quot;volume&quot;])&#10;    data$RSI_EMA_21_x &lt;- rsiema21&#10;&#10;    rsiema34 &lt;- RSI(price,n=34, maType = &quot;EMA&quot;,wts=data[,&quot;volume&quot;])&#10;    data$RSI_EMA_34_x &lt;- rsiema34&#10;    &#10;    return(data)&#10;    &#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="data read RSI EMA" to_port="input 1"/>
              <connect from_op="data read RSI EMA" from_port="output 1" to_op="R_RSI_EMA (2)" to_port="input 1"/>
              <connect from_op="R_RSI_EMA (2)" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_RSI_WMA" width="90" x="715" y="85">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="data read RSI WMA" width="90" x="45" y="85">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="R_RSI_WMA (2)" width="90" x="246" y="85">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    library(TTR)&#10;    &#10;    price&lt;-data[,&quot;close&quot;]&#10;&#10;    rsiwma3 &lt;- RSI(price,n=3, maType = &quot;WMA&quot;,wts=data[,&quot;volume&quot;])    &#10;    data$RSI_WMA_3_x &lt;- rsiwma3&#10;&#10;    rsiwma5 &lt;- RSI(price,n=5, maType = &quot;WMA&quot;,wts=data[,&quot;volume&quot;])    &#10;    data$RSI_WMA_5_x &lt;- rsiwma5&#10;&#10;    rsiwma8 &lt;- RSI(price,n=8, maType = &quot;WMA&quot;,wts=data[,&quot;volume&quot;])    &#10;    data$RSI_WMA_8_x &lt;- rsiwma8&#10;&#10;        rsiwma13 &lt;- RSI(price,n=13, maType = &quot;WMA&quot;,wts=data[,&quot;volume&quot;])    &#10;    data$RSI_WMA_13_x &lt;- rsiwma13&#10;&#10;        rsiwma21 &lt;- RSI(price,n=21, maType = &quot;WMA&quot;,wts=data[,&quot;volume&quot;])    &#10;    data$RSI_WMA_21_x &lt;- rsiwma21&#10;&#10;        rsiwma34 &lt;- RSI(price,n=34, maType = &quot;WMA&quot;,wts=data[,&quot;volume&quot;])    &#10;    data$RSI_WMA_34_x &lt;- rsiwma34&#10;    &#10;    return(data)&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="data read RSI WMA" to_port="input 1"/>
              <connect from_op="data read RSI WMA" from_port="output 1" to_op="R_RSI_WMA (2)" to_port="input 1"/>
              <connect from_op="R_RSI_WMA (2)" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_Money Flow Index" width="90" x="715" y="187">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="Read data MFI" width="90" x="313" y="187">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="MFI" width="90" x="447" y="187">
                <parameter key="script" value="rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;&#10;    library(TTR)&#10;&#10;    mfi3 &lt;- MFI(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],data[,&quot;volume&quot;],n=3)&#10;&#10;    data$MFI_3_x &lt;- mfi3&#10;&#10;    &#10;    mfi5 &lt;- MFI(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],data[,&quot;volume&quot;],n=5)&#10;&#10;    data$MFI_5_x &lt;- mfi5&#10;&#10;&#10;        mfi8 &lt;- MFI(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],data[,&quot;volume&quot;],n=8)&#10;&#10;    data$MFI_8_x &lt;- mfi8&#10;&#10;&#10;        mfi13 &lt;- MFI(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],data[,&quot;volume&quot;],n=13)&#10;&#10;    data$MFI_13_x &lt;- mfi13&#10;&#10;&#10;        mfi21 &lt;- MFI(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],data[,&quot;volume&quot;],n=21)&#10;&#10;    data$MFI_21_x &lt;- mfi21&#10;&#10;&#10;        mfi34 &lt;- MFI(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],data[,&quot;volume&quot;],n=34)&#10;&#10;    data$MFI_34_x &lt;- mfi34&#10;    &#10;    return(data)&#10;&#10;&#10;    &#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="Read data MFI" to_port="input 1"/>
              <connect from_op="Read data MFI" from_port="output 1" to_op="MFI" to_port="input 1"/>
              <connect from_op="MFI" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_EMA_TTR" width="90" x="715" y="289">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="read data EMA TTR" width="90" x="45" y="85">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="R_EMA" width="90" x="313" y="85">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    library(TTR)&#10;    &#10;    EMA3 &lt;- EMA(data[,&quot;close&quot;],3)&#10;    data$EMA_3_x &lt;- EMA3&#10;&#10;    EMA5 &lt;- EMA(data[,&quot;close&quot;],5)&#10;    data$EMA_5_x &lt;- EMA5&#10;    &#10;    EMA8 &lt;- EMA(data[,&quot;close&quot;],8)&#10;    data$EMA_8_x &lt;- EMA8&#10;&#10;    EMA13 &lt;- EMA(data[,&quot;close&quot;],13)&#10;    data$EMA_13_x &lt;- EMA13&#10;&#10;    EMA21 &lt;- EMA(data[,&quot;close&quot;],21)&#10;    data$EMA_21_x &lt;- EMA21&#10;&#10;    EMA34 &lt;- EMA(data[,&quot;close&quot;],34)&#10;    data$EMA_34_x &lt;- EMA34&#10;    &#10;    return(data)&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="read data EMA TTR" to_port="input 1"/>
              <connect from_op="read data EMA TTR" from_port="output 1" to_op="R_EMA" to_port="input 1"/>
              <connect from_op="R_EMA" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_SMA_TTR" width="90" x="715" y="391">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="read data SMA TTR" width="90" x="313" y="187">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="R Moving Averages" width="90" x="447" y="187">
                <parameter key="script" value="rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;&#10;    library(TTR)&#10;    SMA3 &lt;- SMA(data[,&quot;close&quot;],3)&#10;    data$SMA_3_x &lt;- SMA3&#10;&#10;    SMA5 &lt;- SMA(data[,&quot;close&quot;],5)&#10;    data$SMA_5_x &lt;- SMA5&#10;&#10;        SMA8 &lt;- SMA(data[,&quot;close&quot;],8)&#10;    data$SMA_8_x &lt;- SMA8&#10;&#10;        SMA13 &lt;- SMA(data[,&quot;close&quot;],13)&#10;    data$SMA_13_x &lt;- SMA13&#10;&#10;        SMA21 &lt;- SMA(data[,&quot;close&quot;],21)&#10;    data$SMA_21_x &lt;- SMA21&#10;&#10;        SMA34 &lt;- SMA(data[,&quot;close&quot;],34)&#10;    data$SMA_34_x &lt;- SMA34&#10;&#10;   &#10;    return(data)&#10;&#10;&#10;    &#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="read data SMA TTR" to_port="input 1"/>
              <connect from_op="read data SMA TTR" from_port="output 1" to_op="R Moving Averages" to_port="input 1"/>
              <connect from_op="R Moving Averages" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_WMA_TTR" width="90" x="849" y="85">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="read data WMA TTR (2)" width="90" x="313" y="187">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="R Moving Averages (2)" width="90" x="447" y="187">
                <parameter key="script" value="rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;&#10;    library(TTR)&#10;    WMA3 &lt;- WMA(data[,&quot;close&quot;],3)&#10;    data$WMA_3_x &lt;- WMA3&#10;&#10;    WMA5 &lt;- WMA(data[,&quot;close&quot;],5)&#10;    data$WMA_5_x &lt;- WMA5&#10;&#10;       WMA8 &lt;- WMA(data[,&quot;close&quot;],8)&#10;    data$WMA_8_x &lt;- WMA8&#10;&#10;        WMA13 &lt;- WMA(data[,&quot;close&quot;],13)&#10;    data$WMA_13_x &lt;- WMA13&#10;&#10;        WMA21 &lt;- WMA(data[,&quot;close&quot;],21)&#10;    data$WMA_21_x &lt;- WMA21&#10;&#10;        WMA34 &lt;- WMA(data[,&quot;close&quot;],34)&#10;    data$WMA_34_x &lt;- WMA34&#10;    return(data)&#10;&#10;&#10;    &#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="read data WMA TTR (2)" to_port="input 1"/>
              <connect from_op="read data WMA TTR (2)" from_port="output 1" to_op="R Moving Averages (2)" to_port="input 1"/>
              <connect from_op="R Moving Averages (2)" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_DEMA_TTR" width="90" x="849" y="187">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="Execute R (10)" width="90" x="45" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="Execute R" width="90" x="179" y="34">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    library(TTR)&#10;&#10;    dema3 &lt;- DEMA(data[,&quot;close&quot;],n=3)&#10;    data$DEMA_3_x &lt;- dema3&#10;&#10;    dema5 &lt;- DEMA(data[,&quot;close&quot;],n=5)&#10;    data$DEMA_5_x &lt;- dema5&#10;&#10;        dema8 &lt;- DEMA(data[,&quot;close&quot;],n=8)&#10;    data$DEMA_8_x &lt;- dema8&#10;&#10;        dema13 &lt;- DEMA(data[,&quot;close&quot;],n=13)&#10;    data$DEMA_13_x &lt;- dema13&#10;&#10;        dema21 &lt;- DEMA(data[,&quot;close&quot;],n=21)&#10;    data$DEMA_21_x &lt;- dema21&#10;&#10;        dema34 &lt;- DEMA(data[,&quot;close&quot;],n=34)&#10;    data$DEMA_34_x &lt;- dema34&#10;    &#10;    return(data)&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="Execute R (10)" to_port="input 1"/>
              <connect from_op="Execute R (10)" from_port="output 1" to_op="Execute R" to_port="input 1"/>
              <connect from_op="Execute R" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_ZLEMA_TTR" width="90" x="849" y="289">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="Execute R (11)" width="90" x="45" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="Execute R (12)" width="90" x="246" y="85">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    library(TTR)&#10;    &#10;    zl3 &lt;- ZLEMA(data[,&quot;close&quot;],n=3,ratio = NULL)&#10;    data$ZLEMA_3_x &lt;- zl3&#10;&#10;    zl5 &lt;- ZLEMA(data[,&quot;close&quot;],n=5,ratio = NULL)&#10;    data$ZLEMA_5_x &lt;- zl5&#10;&#10;        zl8 &lt;- ZLEMA(data[,&quot;close&quot;],n=8,ratio = NULL)&#10;    data$ZLEMA_8_x &lt;- zl8&#10;&#10;        zl13 &lt;- ZLEMA(data[,&quot;close&quot;],n=13,ratio = NULL)&#10;    data$ZLEMA_13_x &lt;- zl13&#10;&#10;        zl21 &lt;- ZLEMA(data[,&quot;close&quot;],n=21,ratio = NULL)&#10;    data$ZLEMA_21_x &lt;- zl21&#10;&#10;        zl34 &lt;- ZLEMA(data[,&quot;close&quot;],n=34,ratio = NULL)&#10;    data$ZLEMA_34_x &lt;- zl34&#10;    return(data)&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="Execute R (11)" to_port="input 1"/>
              <connect from_op="Execute R (11)" from_port="output 1" to_op="Execute R (12)" to_port="input 1"/>
              <connect from_op="Execute R (12)" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_BollingerBands" width="90" x="849" y="391">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="read data BBands (2)" width="90" x="45" y="34">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="R_BBands (2)" width="90" x="179" y="34">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    &#10;    library(TTR)&#10;    &#10;    bbands &lt;- BBands(data[,&quot;close&quot;],n=10,sd=2)&#10;&#10;&#10;    data$BB_dn_10.2_x &lt;- bbands[,&quot;dn&quot;]&#10;    data$BB_avg_10.2_x &lt;- bbands[,&quot;mavg&quot;]&#10;    data$BB_up_10.2_x &lt;- bbands[,&quot;up&quot;]&#10;    data$BB_pctB_10.2_x &lt;- bbands[,&quot;pctB&quot;]&#10;&#10;&#10;# with different standard deviation&#10;    &#10;    bbandssd1 &lt;- BBands(data[,&quot;close&quot;],n=10,sd=1)&#10;&#10;&#10;    data$BB_dn_10.1_x &lt;- bbandssd1[,&quot;dn&quot;]&#10;    data$BB_avg_10.1_x &lt;- bbandssd1[,&quot;mavg&quot;]&#10;    data$BB_up_10.1_x &lt;- bbandssd1[,&quot;up&quot;]&#10;    data$BB_pctB_10.1_x &lt;- bbandssd1[,&quot;pctB&quot;]&#10;&#10;&#10;    &#10;&#10;    bbands &lt;- BBands(data[,&quot;close&quot;],n=20,sd=2)&#10;&#10;&#10;    data$BB_dn_20.2_x &lt;- bbands[,&quot;dn&quot;]&#10;    data$BB_avg_20.2_x &lt;- bbands[,&quot;mavg&quot;]&#10;    data$BB_up_20.2_x &lt;- bbands[,&quot;up&quot;]&#10;    data$BB_pctB_20.2_x &lt;- bbands[,&quot;pctB&quot;]&#10;&#10;&#10;# with different standard deviation&#10;    &#10;    bbandssd1 &lt;- BBands(data[,&quot;close&quot;],n=20,sd=1)&#10;&#10;&#10;    data$BB_dn_20.1_x &lt;- bbandssd1[,&quot;dn&quot;]&#10;    data$BB_avg_20.1_x &lt;- bbandssd1[,&quot;mavg&quot;]&#10;    data$BB_up_20.1_x &lt;- bbandssd1[,&quot;up&quot;]&#10;    data$BB_pctB_20.1_x &lt;- bbandssd1[,&quot;pctB&quot;]&#10;    &#10;    return(data)&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="read data BBands (2)" to_port="input 1"/>
              <connect from_op="read data BBands (2)" from_port="output 1" to_op="R_BBands (2)" to_port="input 1"/>
              <connect from_op="R_BBands (2)" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
              <description align="center" color="yellow" colored="false" height="105" resized="false" width="180" x="205" y="467">Type your comment</description>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_ADX_TTR" width="90" x="983" y="289">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="read data ADX_TTR" width="90" x="45" y="85">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="R_ADX" width="90" x="313" y="85">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    library(TTR)&#10;    &#10;&#10;    ADX_hilow_3 &lt;- ADX(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],3)&#10;    data$ADX_hilow_3_x &lt;- ADX_hilow_3&#10;&#10;    ADX_hilow_5 &lt;- ADX(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],5)&#10;    data$ADX_hilow_5_x &lt;- ADX_hilow_5&#10;    &#10;    ADX_hilow_8 &lt;- ADX(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],8)&#10;    data$ADX_hilow_8_x &lt;- ADX_hilow_8&#10;&#10;    ADX_hilow_13 &lt;- ADX(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],13)&#10;    data$ADX_hilow_13_x &lt;- ADX_hilow_13&#10;&#10;    ADX_hilow_21 &lt;- ADX(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],21)&#10;    data$ADX_hilow_21_x &lt;- ADX_hilow_21&#10;&#10;    ADX_hilow_34 &lt;- ADX(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],34)&#10;    data$ADX_hilow_34_x &lt;- ADX_hilow_34&#10;    &#10;    return(data)&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="read data ADX_TTR" to_port="input 1"/>
              <connect from_op="read data ADX_TTR" from_port="output 1" to_op="R_ADX" to_port="input 1"/>
              <connect from_op="R_ADX" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
              <description align="center" color="yellow" colored="false" height="105" resized="false" width="180" x="269" y="216">ADX&lt;br/&gt;MULTIPLE OUTPUTS&lt;br&gt;</description>
            </process>
          </operator>
          <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="R_VHF_TTR" width="90" x="983" y="391">
            <process expanded="true">
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="read data VHF_TTR" width="90" x="45" y="85">
                <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
              </operator>
              <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="R_VHF" width="90" x="313" y="85">
                <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;    library(TTR)&#10;    &#10;    VHF_CLOSE_3 &lt;- VHF(data[,&quot;close&quot;],3)&#10;    data$VHF_CLOSE_3_x &lt;- VHF_CLOSE_3&#10;&#10;    VHF_CLOSE_5 &lt;- VHF(data[,&quot;close&quot;],5)&#10;    data$VHF_CLOSE_5_x &lt;- VHF_CLOSE_5&#10;    &#10;    VHF_CLOSE_8 &lt;- VHF(data[,&quot;close&quot;],8)&#10;    data$VHF_CLOSE_8_x &lt;- VHF_CLOSE_8&#10;&#10;    VHF_CLOSE_13 &lt;- VHF(data[,&quot;close&quot;],13)&#10;    data$VHF_CLOSE_13_x &lt;- VHF_CLOSE_13&#10;&#10;    VHF_CLOSE_21 &lt;- VHF(data[,&quot;close&quot;],21)&#10;    data$VHF_CLOSE_21_x &lt;- VHF_CLOSE_21&#10;&#10;    VHF_CLOSE_34 &lt;- VHF(data[,&quot;close&quot;],34)&#10;    data$VHF_CLOSE_34_x &lt;- VHF_CLOSE_34&#10;&#10;# VHF for HIGH LOW CLOSE&#10;&#10;    VHF_hilow_3 &lt;- VHF(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],3)&#10;    data$VHF_hilow_3_x &lt;- VHF_hilow_3&#10;&#10;    VHF_hilow_5 &lt;- VHF(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],5)&#10;    data$VHF_hilow_5_x &lt;- VHF_hilow_5&#10;    &#10;    VHF_hilow_8 &lt;- VHF(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],8)&#10;    data$VHF_hilow_8_x &lt;- VHF_hilow_8&#10;&#10;    VHF_hilow_13 &lt;- VHF(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],13)&#10;    data$VHF_hilow_13_x &lt;- VHF_hilow_13&#10;&#10;    VHF_hilow_21 &lt;- VHF(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],21)&#10;    data$VHF_hilow_21_x &lt;- VHF_hilow_21&#10;&#10;    VHF_hilow_34 &lt;- VHF(data[,c(&quot;high&quot;,&quot;low&quot;,&quot;close&quot;)],34)&#10;    data$VHF_hilow_34_x &lt;- VHF_hilow_34&#10;    &#10;    return(data)&#10;}&#10;"/>
              </operator>
              <connect from_port="in 1" to_op="read data VHF_TTR" to_port="input 1"/>
              <connect from_op="read data VHF_TTR" from_port="output 1" to_op="R_VHF" to_port="input 1"/>
              <connect from_op="R_VHF" from_port="output 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
              <description align="center" color="yellow" colored="false" height="105" resized="false" width="180" x="269" y="216">VHF&lt;br/&gt;Close and High low Close&lt;br/&gt;</description>
            </process>
          </operator>
          <operator activated="false" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="TrendReversal_System_CADET" width="90" x="1184" y="595">
            <process expanded="true">
              <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="TrendReversal Operator" width="90" x="514" y="34">
                <process expanded="true">
                  <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="Read Data for trend Reversal" width="90" x="313" y="187">
                    <parameter key="script" value="rm_main = function(data)&#10;{&#10;    path = &quot;rapidminer_file_test.csv&quot;&#10;    # store example data in a file&#10;    write.csv(data, file = path)&#10;    # return the path of the file&#10;    return(path)&#10;}"/>
                  </operator>
                  <operator activated="true" class="r_scripting:execute_r" compatibility="7.2.000" expanded="true" height="82" name="TrendReversal" width="90" x="447" y="187">
                    <parameter key="script" value="# rm_main is a mandatory function, &#10;# the number of arguments has to be the number of input ports (can be none)&#10;rm_main = function(myfile)&#10;{&#10;    print('I received the following data set:')&#10;    data = read.csv(myfile)&#10;&#10;    x &lt;- data&#10;&#10;CADET_trendrevrp &lt;- function(x,m,k,f)&#10;{&#10;   library(TTR)&#10;   library(zoo)&#10;&#10;&#10;  #use shift function&#10;  &#10;  CADET_Shift &lt;- function(x,shift_by)&#10;  {&#10;    &#10;    if(length(shift_by)&gt;1)&#10;      return(sapply(shift_by,CADET_shift,x=x))&#10;    &#10;    out &lt;- NULL&#10;    abs_shift_by=abs(shift_by)&#10;    &#10;    if(shift_by&gt;0)&#10;      out &lt;- c(tail(x,-abs_shift_by),rep(NA,abs_shift_by))&#10;    &#10;    else if(shift_by&lt;0)&#10;      out &lt;- c(rep(NA,abs_shift_by),head(x,-abs_shift_by))&#10;    &#10;    else&#10;      out &lt;- x&#10;    &#10;    out&#10;  }&#10;  &#10;  #End of shift function&#10;  &#10;  #look ahead period&#10;  la1 &lt;- runMin(x$X.RUT_ADJUSTED_CLOSE,m+k)&#10;  x$minval &lt;- la1&#10;  sminval &lt;- CADET_Shift(la1,(m-1))&#10;  x$sminval &lt;- sminval&#10;  &#10;  #look behind period&#10;  ba1 &lt;- runMax(x$X.RUT_ADJUSTED_CLOSE,m+k)&#10;  x$maxval &lt;- ba1&#10;  smaxval &lt;- CADET_Shift(ba1,(m-1))&#10;  x$smaxval &lt;- smaxval&#10;  &#10;    &#10;  #position value&#10;  g1 &lt;- x$X.RUT_ADJUSTED_CLOSE[k+1:length(x$X.RUT_ADJUSTED_CLOSE)]&#10;  #g1 &lt;- c(rep(NA,k+1),head(x$X.RUT_ADJUSTED_CLOSE[k+1:length(x$X.RUT_ADJUSTED_CLOSE)))&#10;  dd &lt;- c(rep(NA,k+1),tail(x$X.RUT_ADJUSTED_CLOSE,-(k+1)))&#10;  sdd &lt;- CADET_Shift(dd,-(m-2))&#10;  x$posval &lt;- sdd&#10;  sposval &lt;- CADET_Shift(sdd,(m-1))&#10;  x$sposval &lt;- sposval&#10;  &#10;  #formula implementation&#10;  form1 &lt;- ((x$sposval-x$sminval)/(x$smaxval-x$sminval))&#10;  x$form1 &lt;- form1&#10;  #sform &lt;- CADET_Shift(form1,(m-1))&#10;  #x$sform &lt;- sform&#10;  &#10;  mxn &lt;- runMax(x$X.RUT_ADJUSTED_CLOSE,f)&#10;  x$mxn &lt;- mxn&#10;  smxn &lt;- CADET_Shift(mxn,(m-1))&#10;  x$smxn &lt;- smxn&#10;  &#10;  mnn &lt;- runMin(x$X.RUT_ADJUSTED_CLOSE,f)&#10;  x$mnn &lt;- mnn&#10;  smnn &lt;- CADET_Shift(mnn,(m-1))&#10;  x$smnn &lt;- smnn&#10;  &#10;  #nf &lt;- c(rep(NA,m+k+f-2),tail(form1,-(m+k+f-2)))&#10;  nf &lt;- c(rep(NA,k+f-1),tail(form1,-(k+f-1)))&#10;  #ndd &lt;- CADET_Shift(nf,-2)&#10;  x$pnf &lt;- nf&#10;  #spnf &lt;- CADET_Shift(nf,(m-1))&#10;  #x$spnf &lt;- spnf&#10;  &#10;  finalform1 &lt;- x$pnf/(x$mxn-x$mnn)&#10;  finalform1    &#10;}&#10;&#10;&#10;&#10;#Pre-Final formula &#10;&#10;CADET_trendrevprefinal &lt;- function(x,m,k,f)&#10;{&#10;  library(TTR)&#10;  library(zoo)&#10;&#10;  #use shift function&#10;  &#10;  CADET_Shift &lt;- function(x,shift_by)&#10;  {&#10;    &#10;    if(length(shift_by)&gt;1)&#10;      return(sapply(shift_by,CADET_shift,x=x))&#10;    &#10;    out &lt;- NULL&#10;    abs_shift_by=abs(shift_by)&#10;    &#10;    if(shift_by&gt;0)&#10;      out &lt;- c(tail(x,-abs_shift_by),rep(NA,abs_shift_by))&#10;    &#10;    else if(shift_by&lt;0)&#10;      out &lt;- c(rep(NA,abs_shift_by),head(x,-abs_shift_by))&#10;    &#10;    else&#10;      out &lt;- x&#10;    &#10;    out&#10;  }&#10;  &#10;  #End of shift function&#10;  &#10;  #look ahead period&#10;  la1 &lt;- runMin(x$X.RUT_ADJUSTED_CLOSE,m+k)&#10;  x$minval &lt;- la1&#10;  sminval &lt;- CADET_Shift(la1,(m-1))&#10;  x$sminval &lt;- sminval&#10;  &#10;  #look behind period&#10;  ba1 &lt;- runMax(x$X.RUT_ADJUSTED_CLOSE,m+k)&#10;  x$maxval &lt;- ba1&#10;  smaxval &lt;- CADET_Shift(ba1,(m-1))&#10;  x$smaxval &lt;- smaxval&#10;  &#10;    &#10;  #position value&#10;  g1 &lt;- x$X.RUT_ADJUSTED_CLOSE[k+1:length(x$X.RUT_ADJUSTED_CLOSE)]&#10;  #g1 &lt;- c(rep(NA,k+1),head(x$X.RUT_ADJUSTED_CLOSE[k+1:length(x$X.RUT_ADJUSTED_CLOSE)))&#10;  dd &lt;- c(rep(NA,k+1),tail(x$X.RUT_ADJUSTED_CLOSE,-(k+1)))&#10;  sdd &lt;- CADET_Shift(dd,-(m-2))&#10;  x$posval &lt;- sdd&#10;  sposval &lt;- CADET_Shift(sdd,(m-1))&#10;  x$sposval &lt;- sposval&#10;  &#10;  #formula implementation&#10;  form1 &lt;- ((x$sposval-x$sminval)/(x$smaxval-x$sminval))&#10;  x$form1 &lt;- form1&#10;  #sform &lt;- CADET_Shift(form1,(m-1))&#10;  #x$sform &lt;- sform&#10;  &#10;  mxn &lt;- runMax(x$X.RUT_ADJUSTED_CLOSE,f)&#10;  x$mxn &lt;- mxn&#10;  smxn &lt;- CADET_Shift(mxn,(m-1))&#10;  x$smxn &lt;- smxn&#10;  &#10;  mnn &lt;- runMin(x$X.RUT_ADJUSTED_CLOSE,f)&#10;  x$mnn &lt;- mnn&#10;  smnn &lt;- CADET_Shift(mnn,(m-1))&#10;  x$smnn &lt;- smnn&#10;  &#10;  #nf &lt;- c(rep(NA,m+k+f-2),tail(form1,-(m+k+f-2)))&#10;  nf &lt;- c(rep(NA,k+f-1),tail(form1,-(k+f-1)))&#10;  #ndd &lt;- CADET_Shift(nf,-2)&#10;  x$pnf &lt;- nf&#10;  #spnf &lt;- CADET_Shift(nf,(m-1))&#10;  #x$spnf &lt;- spnf&#10;  &#10;  finalform1 &lt;- x$pnf/(x$mxn-x$mnn)&#10;  form1    &#10;}&#10;&#10;#End of pre-final formula&#10;&#10;&#10;#Change values below for ff1 and ff2 variables - see below comments for reference&#10;#CADET_trendrevprefinal(data,LookaheadPeriod,LookbehindPeriod,normalizePeriod)&#10;#CADET_trendrevrp(data,LookaheadPeriod,LookbehindPeriod,normalizePeriod)&#10;&#10;&#10;ff1 &lt;- CADET_trendrevprefinal(data,8,21,65)&#10;data$RelativePeak &lt;- ff1&#10;&#10;ff2 &lt;- CADET_trendrevrp(data,8,21,65)&#10;data$AbsolutePeak &lt;- ff2&#10;&#10;return(data)&#10;}&#10;"/>
                  </operator>
                  <connect from_port="in 1" to_op="Read Data for trend Reversal" to_port="input 1"/>
                  <connect from_op="Read Data for trend Reversal" from_port="output 1" to_op="TrendReversal" to_port="input 1"/>
                  <connect from_op="TrendReversal" from_port="output 1" to_port="out 1"/>
                  <portSpacing port="source_in 1" spacing="0"/>
                  <portSpacing port="source_in 2" spacing="0"/>
                  <portSpacing port="sink_out 1" spacing="0"/>
                  <portSpacing port="sink_out 2" spacing="0"/>
                  <description align="center" color="yellow" colored="false" height="230" resized="false" width="670" x="126" y="307">For Change of values&lt;br&gt;&lt;br&gt;1. Go to Trendreversal operator&lt;br&gt;2. Scroll down to the bottom of the code&lt;br&gt;3. Changes values at the ff1 and ff2 variables.&lt;br&gt;&lt;br&gt;Follow below parameters for changing values in ff1 and ff2 variables&lt;br&gt;&lt;br&gt;#Change values below for ff1 and ff2 variables - see below comments for reference&lt;br&gt;#CADET_trendrevprefinal(data,LookaheadPeriod,LookbehindPeriod,normalizePeriod)&lt;br&gt;#CADET_trendrevrp(data,LookaheadPeriod,LookbehindPeriod,normalizePeriod)&lt;br&gt;&lt;br&gt;&lt;br&gt;</description>
                </process>
              </operator>
              <connect from_port="in 1" to_op="TrendReversal Operator" to_port="in 1"/>
              <connect from_op="TrendReversal Operator" from_port="out 1" to_port="out 1"/>
              <portSpacing port="source_in 1" spacing="0"/>
              <portSpacing port="source_in 2" spacing="0"/>
              <portSpacing port="sink_out 1" spacing="0"/>
              <portSpacing port="sink_out 2" spacing="0"/>
            </process>
          </operator>
          <connect from_port="in 1" to_op="R_CADET_MACD" to_port="in 1"/>
          <connect from_op="R_CADET_MACD" from_port="out 1" to_op="R_TTR_MACD" to_port="in 1"/>
          <connect from_op="R_TTR_MACD" from_port="out 1" to_op="R_TTR_CMF" to_port="in 1"/>
          <connect from_op="R_TTR_CMF" from_port="out 1" to_op="R_CADET_KST_Smooth" to_port="in 1"/>
          <connect from_op="R_CADET_KST_Smooth" from_port="out 1" to_op="R_TTR_KST" to_port="in 1"/>
          <connect from_op="R_TTR_KST" from_port="out 1" to_op="R_TTR_ChaikinAD" to_port="in 1"/>
          <connect from_op="R_TTR_ChaikinAD" from_port="out 1" to_op="R_TTR_ChaikinVolatility" to_port="in 1"/>
          <connect from_op="R_TTR_ChaikinVolatility" from_port="out 1" to_op="R_TTR_SMI" to_port="in 1"/>
          <connect from_op="R_TTR_SMI" from_port="out 1" to_op="R_RSI_TTR" to_port="in 1"/>
          <connect from_op="R_RSI_TTR" from_port="out 1" to_op="R_CADET_RSI_Sentiment" to_port="in 1"/>
          <connect from_op="R_CADET_RSI_Sentiment" from_port="out 1" to_op="R_HMA_TTR_CADET" to_port="in 1"/>
          <connect from_op="R_HMA_TTR_CADET" from_port="out 1" to_op="R_RSI_EMA" to_port="in 1"/>
          <connect from_op="R_RSI_EMA" from_port="out 1" to_op="R_RSI_WMA" to_port="in 1"/>
          <connect from_op="R_RSI_WMA" from_port="out 1" to_op="R_Money Flow Index" to_port="in 1"/>
          <connect from_op="R_Money Flow Index" from_port="out 1" to_op="R_EMA_TTR" to_port="in 1"/>
          <connect from_op="R_EMA_TTR" from_port="out 1" to_op="R_SMA_TTR" to_port="in 1"/>
          <connect from_op="R_SMA_TTR" from_port="out 1" to_op="R_WMA_TTR" to_port="in 1"/>
          <connect from_op="R_WMA_TTR" from_port="out 1" to_op="R_DEMA_TTR" to_port="in 1"/>
          <connect from_op="R_DEMA_TTR" from_port="out 1" to_op="R_ZLEMA_TTR" to_port="in 1"/>
          <connect from_op="R_ZLEMA_TTR" from_port="out 1" to_op="R_BollingerBands" to_port="in 1"/>
          <connect from_op="R_BollingerBands" from_port="out 1" to_op="R_ADX_TTR" to_port="in 1"/>
          <connect from_op="R_ADX_TTR" from_port="out 1" to_op="R_VHF_TTR" to_port="in 1"/>
          <connect from_op="R_VHF_TTR" from_port="out 1" to_port="out 1"/>
          <portSpacing port="source_in 1" spacing="0"/>
          <portSpacing port="source_in 2" spacing="0"/>
          <portSpacing port="sink_out 1" spacing="0"/>
          <portSpacing port="sink_out 2" spacing="0"/>
          <description align="left" color="yellow" colored="false" height="1252" resized="true" width="737" x="311" y="520">Description of Individual Operators&lt;br&gt;&lt;br&gt;R_CADET_MACD&lt;br&gt;MACD technical indicator from the CADET RESEARCH&lt;br&gt;&lt;br&gt;R_TTR_CMF&lt;br&gt;CMF technical indicator from the TTR R package&lt;br&gt;&lt;br&gt;R_TTR_KST&lt;br&gt;KST technical indicator from the TTR R package&lt;br&gt;&lt;br&gt;R_TTR_ChaikinVolatilityIndex&lt;br&gt;ChaikinVolatilityIndex technical indicator from the TTR R package&lt;br&gt;&lt;br&gt;R_TTR_MACD&lt;br&gt;MACD technical indicator from the TTR R package&lt;br&gt;&lt;br&gt;R_CADET_KST_Smooth&lt;br&gt;KST technical indicator from the TTR R package and CADET RESEARCH with more parameters.&lt;br&gt;&lt;br&gt;R_TTR_ChaikinAD&lt;br&gt;ChaikinAD technical indicator from the TTR R package&lt;br&gt;&lt;br&gt;R_TTR_SMI&lt;br&gt;SMI technical indicator from the TTR R package&lt;br&gt;&lt;br&gt;R_RSI_TTR&lt;br&gt;RSI technical indicator from the TTR R package&lt;br&gt;&lt;br&gt;R_CADET_RSI_Sentiment&lt;br&gt;RSI technical indicator from the TTR R package and CADET RESEARCH - Dr.DRAKE FORMULA.&lt;br&gt;&lt;br&gt;R_HMA_TTR_CADET&lt;br&gt;HMA technical indicator from the TTR R package and CADET RESEARCH - Derieved from original formula of HMA.&lt;br&gt;&lt;br&gt;R_RSI_EMA&lt;br&gt;RSI EMA technical indicator from the TTR R package with weighted formula.&lt;br&gt;&lt;br&gt;R_RSI_WMA&lt;br&gt;RSI WMA technical indicator from the TTR R package with weighted formula.&lt;br&gt;&lt;br&gt;R_MoneyFlowIndex&lt;br&gt;MoneyFlowIndex technical indicator from the TTR R package&lt;br&gt;&lt;br&gt;R_EMA_TTR&lt;br&gt;EMA technical indicator from the TTR R package&lt;br&gt;&lt;br&gt;R_SMA_TTR&lt;br&gt;SMA technical indicator from the TTR R package&lt;br&gt;&lt;br&gt;R_WMA_TTR&lt;br&gt;WMA technical indicator from the TTR R package&lt;br&gt;&lt;br&gt;R_DEMA_TTR&lt;br&gt;DEMA technical indicator from the TTR R package&lt;br&gt;&lt;br&gt;R_ZLEMA_TTR&lt;br&gt;ZLEMA technical indicator from the TTR R package&lt;br&gt;&lt;br&gt;R_BollingerBands&lt;br&gt;BollingerBands technical indicator from the TTR R package&lt;br&gt;&lt;br&gt;R_Shift&lt;br&gt;CADET shift operator for generating leads and lags in the data.&lt;br&gt;&lt;br&gt;Trend Reveral_System_CADET&lt;br&gt;Calculates if the next sample in a time series is local maximun (1.0) or minimum (0.0)&lt;br&gt;</description>
        </process>
      </operator>
      <operator activated="true" class="subprocess" compatibility="7.2.002" expanded="true" height="82" name="Post-Process 2" width="90" x="648" y="34">
        <process expanded="true">
          <operator activated="false" class="generate_id" compatibility="7.2.002" expanded="true" height="82" name="Generate ID" width="90" x="313" y="340">
            <parameter key="create_nominal_ids" value="false"/>
            <parameter key="offset" value="0"/>
          </operator>
          <operator activated="false" class="generate_id" compatibility="7.2.002" expanded="true" height="82" name="Generate ID (2)" width="90" x="112" y="136">
            <parameter key="create_nominal_ids" value="false"/>
            <parameter key="offset" value="0"/>
          </operator>
          <operator activated="false" class="join" compatibility="7.2.002" expanded="true" height="82" name="Join" width="90" x="246" y="85">
            <parameter key="remove_double_attributes" value="true"/>
            <parameter key="join_type" value="inner"/>
            <parameter key="use_id_attribute_as_key" value="true"/>
            <list key="key_attributes"/>
            <parameter key="keep_both_join_attributes" value="false"/>
          </operator>
          <operator activated="false" class="generate_id" compatibility="7.2.002" expanded="true" height="82" name="Generate ID (3)" width="90" x="112" y="238">
            <parameter key="create_nominal_ids" value="false"/>
            <parameter key="offset" value="0"/>
          </operator>
          <operator activated="false" class="join" compatibility="7.2.002" expanded="true" height="82" name="Join (2)" width="90" x="380" y="136">
            <parameter key="remove_double_attributes" value="true"/>
            <parameter key="join_type" value="inner"/>
            <parameter key="use_id_attribute_as_key" value="true"/>
            <list key="key_attributes"/>
            <parameter key="keep_both_join_attributes" value="false"/>
          </operator>
          <operator activated="true" class="select_attributes" compatibility="7.2.002" expanded="true" height="82" name="Select Attributes" width="90" x="581" y="34">
            <parameter key="attribute_filter_type" value="subset"/>
            <parameter key="attribute" value=""/>
            <parameter key="attributes" value="X.9|X.8|X.7|X.6|X.5|X.4|X.3|X.21|X.20|X.2|X.19|X.18|X.17|X.16|X.15|X.14|X.13|X.12|X.11|X.10|X.1"/>
            <parameter key="use_except_expression" value="false"/>
            <parameter key="value_type" value="attribute_value"/>
            <parameter key="use_value_type_exception" value="false"/>
            <parameter key="except_value_type" value="time"/>
            <parameter key="block_type" value="attribute_block"/>
            <parameter key="use_block_type_exception" value="false"/>
            <parameter key="except_block_type" value="value_matrix_row_start"/>
            <parameter key="invert_selection" value="true"/>
            <parameter key="include_special_attributes" value="false"/>
          </operator>
          <operator activated="true" class="rename_by_replacing" compatibility="7.2.002" expanded="true" height="82" name="Final Result" width="90" x="715" y="34">
            <parameter key="attribute_filter_type" value="subset"/>
            <parameter key="attribute" value=""/>
            <parameter key="attributes" value="CRSI_13_x|CRSI_21_x|CRSI_34_x|CRSI_3_x|CRSI_5_x|CRSI_8_x|RSI_13_x|RSI_21_x|RSI_34_x|RSI_3_x|RSI_5_x|RSI_8_x|HMA_8_x|HMA_5_x|HMA_3_x|HMA_21_x|HMA_13_x"/>
            <parameter key="use_except_expression" value="false"/>
            <parameter key="value_type" value="attribute_value"/>
            <parameter key="use_value_type_exception" value="false"/>
            <parameter key="except_value_type" value="time"/>
            <parameter key="block_type" value="attribute_block"/>
            <parameter key="use_block_type_exception" value="false"/>
            <parameter key="except_block_type" value="value_matrix_row_start"/>
            <parameter key="invert_selection" value="false"/>
            <parameter key="include_special_attributes" value="false"/>
            <parameter key="replace_what" value="_x"/>
            <parameter key="replace_by" value="_RUT"/>
          </operator>
          <connect from_port="in 1" to_op="Select Attributes" to_port="example set input"/>
          <connect from_op="Generate ID (2)" from_port="example set output" to_op="Join" to_port="right"/>
          <connect from_op="Generate ID (3)" from_port="example set output" to_op="Join (2)" to_port="right"/>
          <connect from_op="Select Attributes" from_port="example set output" to_op="Final Result" to_port="example set input"/>
          <connect from_op="Final Result" from_port="example set output" to_port="out 1"/>
          <portSpacing port="source_in 1" spacing="0"/>
          <portSpacing port="source_in 2" spacing="0"/>
          <portSpacing port="sink_out 1" spacing="0"/>
          <portSpacing port="sink_out 2" spacing="0"/>
        </process>
      </operator>
      <connect from_op="Yahoo Historical Stock Data (3)" from_port="example set" to_op="Pre-Process 1" to_port="in 1"/>
      <connect from_op="Pre-Process 1" from_port="out 1" to_op="CADET_TOOLBOX" to_port="in 1"/>
      <connect from_op="CADET_TOOLBOX" from_port="out 1" to_op="Post-Process 2" to_port="in 1"/>
      <connect from_op="Post-Process 2" from_port="out 1" to_port="result 1"/>
      <portSpacing port="source_input 1" spacing="0"/>
      <portSpacing port="sink_result 1" spacing="0"/>
      <portSpacing port="sink_result 2" spacing="0"/>
      <description align="left" color="yellow" colored="false" height="80" resized="true" width="158" x="412" y="188">Activate the required Technical indicators inside the CADET TOOLBOX</description>
    </process>
  </operator>
</process>
